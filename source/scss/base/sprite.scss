// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-down-name: 'arrow-down';
$arrow-down-x: 65px;
$arrow-down-y: 30px;
$arrow-down-offset-x: -65px;
$arrow-down-offset-y: -30px;
$arrow-down-width: 11px;
$arrow-down-height: 7px;
$arrow-down-total-width: 83px;
$arrow-down-total-height: 68px;
$arrow-down-image: '../img/sprite.png';
$arrow-down: (65px, 30px, -65px, -30px, 11px, 7px, 83px, 68px, '../img/sprite.png', 'arrow-down', );
$arrow-right-name: 'arrow-right';
$arrow-right-x: 65px;
$arrow-right-y: 37px;
$arrow-right-offset-x: -65px;
$arrow-right-offset-y: -37px;
$arrow-right-width: 7px;
$arrow-right-height: 11px;
$arrow-right-total-width: 83px;
$arrow-right-total-height: 68px;
$arrow-right-image: '../img/sprite.png';
$arrow-right: (65px, 37px, -65px, -37px, 7px, 11px, 83px, 68px, '../img/sprite.png', 'arrow-right', );
$basket-name: 'basket';
$basket-x: 0px;
$basket-y: 0px;
$basket-offset-x: 0px;
$basket-offset-y: 0px;
$basket-width: 23px;
$basket-height: 23px;
$basket-total-width: 83px;
$basket-total-height: 68px;
$basket-image: '../img/sprite.png';
$basket: (0px, 0px, 0px, 0px, 23px, 23px, 83px, 68px, '../img/sprite.png', 'basket', );
$enter-name: 'enter';
$enter-x: 0px;
$enter-y: 51px;
$enter-offset-x: 0px;
$enter-offset-y: -51px;
$enter-width: 19px;
$enter-height: 17px;
$enter-total-width: 83px;
$enter-total-height: 68px;
$enter-image: '../img/sprite.png';
$enter: (0px, 51px, 0px, -51px, 19px, 17px, 83px, 68px, '../img/sprite.png', 'enter', );
$hamburger-name: 'hamburger';
$hamburger-x: 65px;
$hamburger-y: 18px;
$hamburger-offset-x: -65px;
$hamburger-offset-y: -18px;
$hamburger-width: 16px;
$hamburger-height: 12px;
$hamburger-total-width: 83px;
$hamburger-total-height: 68px;
$hamburger-image: '../img/sprite.png';
$hamburger: (65px, 18px, -65px, -18px, 16px, 12px, 83px, 68px, '../img/sprite.png', 'hamburger', );
$marker-name: 'marker';
$marker-x: 76px;
$marker-y: 30px;
$marker-offset-x: -76px;
$marker-offset-y: -30px;
$marker-width: 6px;
$marker-height: 6px;
$marker-total-width: 83px;
$marker-total-height: 68px;
$marker-image: '../img/sprite.png';
$marker: (76px, 30px, -76px, -30px, 6px, 6px, 83px, 68px, '../img/sprite.png', 'marker', );
$search-name: 'search';
$search-x: 65px;
$search-y: 0px;
$search-offset-x: -65px;
$search-offset-y: 0px;
$search-width: 18px;
$search-height: 18px;
$search-total-width: 83px;
$search-total-height: 68px;
$search-image: '../img/sprite.png';
$search: (65px, 0px, -65px, 0px, 18px, 18px, 83px, 68px, '../img/sprite.png', 'search', );
$slider-arrow-left-active-name: 'slider-arrow-left-active';
$slider-arrow-left-active-x: 23px;
$slider-arrow-left-active-y: 0px;
$slider-arrow-left-active-offset-x: -23px;
$slider-arrow-left-active-offset-y: 0px;
$slider-arrow-left-active-width: 14px;
$slider-arrow-left-active-height: 28px;
$slider-arrow-left-active-total-width: 83px;
$slider-arrow-left-active-total-height: 68px;
$slider-arrow-left-active-image: '../img/sprite.png';
$slider-arrow-left-active: (23px, 0px, -23px, 0px, 14px, 28px, 83px, 68px, '../img/sprite.png', 'slider-arrow-left-active', );
$slider-arrow-left-name: 'slider-arrow-left';
$slider-arrow-left-x: 37px;
$slider-arrow-left-y: 0px;
$slider-arrow-left-offset-x: -37px;
$slider-arrow-left-offset-y: 0px;
$slider-arrow-left-width: 14px;
$slider-arrow-left-height: 28px;
$slider-arrow-left-total-width: 83px;
$slider-arrow-left-total-height: 68px;
$slider-arrow-left-image: '../img/sprite.png';
$slider-arrow-left: (37px, 0px, -37px, 0px, 14px, 28px, 83px, 68px, '../img/sprite.png', 'slider-arrow-left', );
$slider-arrow-right-active-name: 'slider-arrow-right-active';
$slider-arrow-right-active-x: 51px;
$slider-arrow-right-active-y: 0px;
$slider-arrow-right-active-offset-x: -51px;
$slider-arrow-right-active-offset-y: 0px;
$slider-arrow-right-active-width: 14px;
$slider-arrow-right-active-height: 28px;
$slider-arrow-right-active-total-width: 83px;
$slider-arrow-right-active-total-height: 68px;
$slider-arrow-right-active-image: '../img/sprite.png';
$slider-arrow-right-active: (51px, 0px, -51px, 0px, 14px, 28px, 83px, 68px, '../img/sprite.png', 'slider-arrow-right-active', );
$slider-arrow-right-name: 'slider-arrow-right';
$slider-arrow-right-x: 0px;
$slider-arrow-right-y: 23px;
$slider-arrow-right-offset-x: 0px;
$slider-arrow-right-offset-y: -23px;
$slider-arrow-right-width: 14px;
$slider-arrow-right-height: 28px;
$slider-arrow-right-total-width: 83px;
$slider-arrow-right-total-height: 68px;
$slider-arrow-right-image: '../img/sprite.png';
$slider-arrow-right: (0px, 23px, 0px, -23px, 14px, 28px, 83px, 68px, '../img/sprite.png', 'slider-arrow-right', );
$spritesheet-width: 83px;
$spritesheet-height: 68px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($arrow-down, $arrow-right, $basket, $enter, $hamburger, $marker, $search, $slider-arrow-left-active, $slider-arrow-left, $slider-arrow-right-active, $slider-arrow-right, );
$spritesheet: (83px, 68px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
